% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCAmatchR.R
\name{PCAmatchR}
\alias{PCAmatchR}
\title{PCAmatchR}
\usage{
PCAmatchR(
  PC = NULL,
  eigen_value = NULL,
  data = NULL,
  ids = NULL,
  case_control = NULL,
  num_controls = 1,
  num_PCs = 1000,
  exact_match = NULL,
  weight_dist = TRUE,
  weights = NULL
)
}
\arguments{
\item{PC}{Individual level principle components.}

\item{eigen_value}{Computed eigen value for each PC. Used to calculate the percent variance explained by each PC.}

\item{data}{Dataframe containing id and case/control status. Optionally includes covariate data for exact matching.}

\item{ids}{The unique id variable contained in both "PC" and "data."}

\item{case_control}{The case control status variable.}

\item{num_controls}{The number of controls to match to each case. Default is 1:1 matching.}

\item{num_PCs}{The total number of PCs calculated within the PCA. Default is 1000.}

\item{exact_match}{Optional variables contained in the dataframe on which to perform exact matching (i.e. sex, race, etc.).}

\item{weight_dist}{When set to true, matches are produced based on PC weighted Mahalanobis distance. Default is TRUE.}

\item{weights}{Optional user defined weights used to compute the weighted Mahalanobis distance metric.}
}
\value{
A list of matches and weights.
}
\description{
PCAmatchR
}
\examples{
\dontrun{test<- PCAmatchR(eigen_value= eigen_values,
                            PC= PCs,
                            data=mydata[,c(4:7)],
                            ids=c("id"),
                            case_control=c("CaCo"),
                            num_controls=1,
                            num_PCs= 3,
                            weight_dist=FALSE)}

}
